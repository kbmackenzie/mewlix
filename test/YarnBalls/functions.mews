-- mewlix: function tests
yarn ball test.functions

🐱 sum(a, b)
  bring a + b
~meow

-- Same as:
🐱 sum_(a, b); bring a + b; ~meow

-- Lambdas work too:
mew sum! = 🐈 (a, b) -> a + b

mew f = 🐈 (x) -> x
mew g = 🐈 (x) -> x
mew h = 🐈 (x) -> x

-- Function composition!
f :> g
f :> g :> h

-- Function application!
x |> f
x |> f |> g |> h

-- Calls!
sum(1, 2)
do sum <- 1, 2

-- Currying!
mew curried  = 🐈 (a) -> 🐈 (b) -> 🐈 (c) -> [a, b, c]
mew curried_ = 🐈 (a)
  -> 🐈 (b)
  -> 🐈 (c)
  -> 🐈 (d)
  -> 🐈 (e) -> [a, b, c, d, e]

-- Box binding!
mew operations = 📦 []

🐱 [operations.sum](a, b)
  bring a + b
~meow

-- Void function:
🐱 void_()
~meow

-- Stylish lambdas:
mew sum1 = 🐈 (a, b) ->
  a + b

mew sum2 = 🐈 (a, b)
  -> a + b

-- Early return (no value):
🐱 print_is_even(n)
  pounce when n % 2 == 0
    meow "Number is even"
    run away -- Same as 'bring nothing'!
  ~meow
  meow "Number is odd"
~meow
